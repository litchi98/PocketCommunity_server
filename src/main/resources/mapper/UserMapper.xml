<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.litchi.pocketcommunity.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.litchi.pocketcommunity.bean.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="tel_Number" jdbcType="VARCHAR" property="telNumber" />
    <result column="identification_Id" jdbcType="VARCHAR" property="identificationId" />
    <result column="avatar_Image_Id" jdbcType="INTEGER" property="avatarImageId" />
    <result column="role_Id" jdbcType="INTEGER" property="roleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, password, gender, tel_Number, identification_Id, avatar_Image_Id, role_Id
  </sql>
  <select id="selectByExample" parameterType="com.litchi.pocketcommunity.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.litchi.pocketcommunity.bean.UserKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from m_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.litchi.pocketcommunity.bean.UserKey">
    delete from m_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.litchi.pocketcommunity.bean.UserExample">
    delete from m_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.litchi.pocketcommunity.bean.User">
    insert into m_user (id, name, password, 
      gender, tel_Number, identification_Id, 
      avatar_Image_Id, role_Id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{telNumber,jdbcType=VARCHAR}, #{identificationId,jdbcType=VARCHAR}, 
      #{avatarImageId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.litchi.pocketcommunity.bean.User">
    insert into m_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="telNumber != null">
        tel_Number,
      </if>
      <if test="identificationId != null">
        identification_Id,
      </if>
      <if test="avatarImageId != null">
        avatar_Image_Id,
      </if>
      <if test="roleId != null">
        role_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="telNumber != null">
        #{telNumber,jdbcType=VARCHAR},
      </if>
      <if test="identificationId != null">
        #{identificationId,jdbcType=VARCHAR},
      </if>
      <if test="avatarImageId != null">
        #{avatarImageId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.litchi.pocketcommunity.bean.UserExample" resultType="java.lang.Long">
    select count(*) from m_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update m_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.telNumber != null">
        tel_Number = #{record.telNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.identificationId != null">
        identification_Id = #{record.identificationId,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarImageId != null">
        avatar_Image_Id = #{record.avatarImageId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_Id = #{record.roleId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update m_user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      tel_Number = #{record.telNumber,jdbcType=VARCHAR},
      identification_Id = #{record.identificationId,jdbcType=VARCHAR},
      avatar_Image_Id = #{record.avatarImageId,jdbcType=INTEGER},
      role_Id = #{record.roleId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.litchi.pocketcommunity.bean.User">
    update m_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="telNumber != null">
        tel_Number = #{telNumber,jdbcType=VARCHAR},
      </if>
      <if test="identificationId != null">
        identification_Id = #{identificationId,jdbcType=VARCHAR},
      </if>
      <if test="avatarImageId != null">
        avatar_Image_Id = #{avatarImageId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_Id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.litchi.pocketcommunity.bean.User">
    update m_user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      tel_Number = #{telNumber,jdbcType=VARCHAR},
      identification_Id = #{identificationId,jdbcType=VARCHAR},
      avatar_Image_Id = #{avatarImageId,jdbcType=INTEGER},
      role_Id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>